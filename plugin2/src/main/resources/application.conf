// name of the output directory
outDir = "OUTPUT"

// pNames
// pattern names used by DePaCoG
pNames = {
    1 : "Abstract Factory"
    2 : "Builder"
    3 : "Factory Method"
    4 : "Facade"
    5 : "Chain of Responsibility"
    6 : "Mediator"
    7 : "Visitor"
    8 : "Template Method"
}

// key words used for name substitution
inter1 = "#INTER1#"
inter2 = "#INTER2#"
class1 = "#CLASS1#"
class2 = "#CLASS2#"

// p1 pattern 1 used by AFBuilder
p1 = {
    0 : ""
    1 : "public interface #INTER1# {"
    2 : "   #INTER2# create#INTER2#();"
    3 : "}"

    4 : "interface #INTER2# {"
    5 : "   //..."
    6 : "}"

    7 : "public class #CLASS1# implements #INTER1# {"
    8 : "   public #INTER2# create#INTER2#() {"
    9 : "      return new #CLASS2#();"
    10: "   }"
    11: "}"

    12: "public class #CLASS2# implements #INTER2# {"
    13: "   //..."
    14: "}"
}

// p2 pattern 2 used by BuilderBuilder
p2 = {
    0 : "public interface #INTER1# {"
    1 : "   void buildPart#CLASS2#();"
    2 : "   #INTER2# getResult();"
    3 : "}"

    4 : "interface Product#CLASS2# {"
    5 : "interface Product#CLASS2# extends Product {"
    6 : "   //..."
    7 : "}"

    8: "public class #CLASS1# implements #INTER1# {"
    9: "   private #INTER2# co = new #INTER2#();"
    10: "   public void buildPart#CLASS2#() { "
    11: "      co.add(new #CLASS2#());"
    12: "   }"
    13: "   public #INTER2# getResult() {"
    14: "      return co;"
    15: "   }"
    16: "}"

    17: "class #INTER2# {"
    18: "   void add(Product part) {"
    19: "      //..."
    20: "   }"
    21: "}"

    22: "public class #CLASS2# implements Product#INTER2# { "
    23: "   //..."
    24: "}"
}

// p3 pattern 3 used by FMBuilder
p3 = {
    0 : "public abstract class #INTER1# {"
    1 : ""
    2 : "   public abstract #INTER2# factoryMethod();"
    3 : "   public #INTER2# operation() {"
    4 : "      return factoryMethod();"
    5 : "   }"
    6 : "}"

    7 : "public class #CLASS1# extends #INTER1# {"
    8 : "   public #INTER2# factoryMethod() {"
    9 : "      return new #CLASS2#();"
    10: "   }"
    11: "}"

    12: "public interface #INTER2# {"
    13: "   //..."
    14: "}"

    15: "public class #CLASS2# implements #INTER2# {"
    16: "   //..."
    17: "}"
}

// p4 pattern 4 used by FacadeBuilder
p4 = {
    0 : "public interface #INTER1# {"
    1 : "   void run();"
    2 : "}"

    3 : "public class #CLASS1# implements #INTER1# {"
    4 : "   private #CLASS2# component#INTER2# = new #CLASS2#();"

    5 : "   public #CLASS1#("
    6 : "                   #CLASS2# component#INTER2#,"
    7 : "                   ) {"
    8 : "      this.component#INTER2# = component#INTER2#;"
    9 : "   }"

    10: "   public void run() {"
    11: "      //..."
    12: "   }"
    13: "}"

    14: "public class #CLASS2# {"
    15: "   //..."
    16: "}"
}

// p5 pattern 5 used by CoRBuilder
p5 = {
    0 : "public abstract class #INTER1# {"
    1 : "   private #INTER1# successor;"
    2 : "   public #INTER1#() { }"
    3 : "   public #INTER1#(#INTER1# successor) {"
    4 : "      this.successor = successor;"
    5 : "   }"
    6 : "   public void handle() {"
    7 : "      if (successor != null) {"
    8 : "         successor.handle();"
    9 : "      }"
    10: "   }"
    11: "}"

    12: "public class #CLASS1# extends #INTER1# {"
    13: "   public #CLASS1#(#INTER1# successor) { "
    14: "      super(successor);"
    15: "   }"
    16: "   public void handle() {"
    17: "      //..."
    18: "      super.handle();"
    19: "   }"
    20: "}"
}

// p6 pattern 6 used by MediatorBuilder
p6 = {
    0 : "public interface #INTER1# {"
    1 : "   void mediate(#INTER2# c);"
    2 : "}"

    3 : "public abstract class #INTER2# {"
    4 : "   #INTER1# mediator = new #INTER1#();"
    5 : "}"

    6 : "public class #CLASS1# implements #INTER1# { "
    7 : "   private #CLASS2# colleague1 = new #CLASS2#();"
    8 : "   private #CLASS2# colleague2 = new #CLASS2#();"
    9 : "   public void mediate(#INTER2# colleague) {"
    10: "      if (colleague == colleague1) {"
    11: "         colleague2.#CLASS2#Action();"
    12: "      }"
    13: "      if (colleague == colleague2) {"
    14: "         colleague1.#CLASS2#Action();"
    15: "      }"
    16: "   }"
    17: "}"

    18: "public class #CLASS2# extends #INTER2# { "
    19: "   public #CLASS2#(#INTER1# mediator) {"
    20: "      super.mediator = mediator;"
    21: "   }"
    22: "   void #CLASS2#Action() { "
    23: "      //..."
    24: "   }"
    25: "}"
}

// p7 pattern 7 used by VisitorBuilder
p7 = {
    0 : "public interface #INTER1# {"
    1 : "   void visit#CLASS2#(#CLASS2# e);"
    2 : "}"

    3 : "public interface #INTER2# {"
    4 : "   void accept(#INTER1# v);"
    5 : "}"

    6 : "public class #CLASS1# implements #INTER1# {"
    7 : "   public void visit#CLASS2#(#CLASS2# e) {"
    8 : "      //..."
    9 : "   }"
    10: "}"

    11: "public class #CLASS2# implements #INTER2# {"
    12: "   public void accept(#INTER1# v) {"
    13: "      v.visit#CLASS2#(this);"
    14: "   }"
    15: "}"
}

// p8 pattern 8 used by TMBuilder
p8 = {
    0 : "public abstract class #INTER1# {"
    1 : "   protected abstract void #CLASS2#();"
    2 : "   public final void templateMethod() {"
    3 : "      #CLASS2#();"
    4 : "   }"
    5 : "}"

    6 : "public class #CLASS1# extends #INTER1# { "
    7 : "   protected void #CLASS2#() {"
    8 : "      //..."
    9 : "   }"
    10: "}"
}